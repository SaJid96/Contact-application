{"ast":null,"code":"//TODO: create contact using all actions\nimport { SET_CONTACT, SET_LOADING, CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"./action.types\"; //TODO: use switch case\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? { ...state,\n        contacts: []\n      } : { ...state,\n        contacts: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case CONTACT_TO_UPDATE:\n      return { ...state,\n        contactToUpdate: action.payload,\n        contactToUpdateKey: action.Key\n      };\n\n    case SET_SINGLE_CONTACT:\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/dell/Desktop/REACT/challenge_application/src/context/reducer.js"],"names":["SET_CONTACT","SET_LOADING","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","state","action","type","payload","contacts","isLoading","contactToUpdate","contactToUpdateKey","Key","contact"],"mappings":"AAAA;AAEA,SACEA,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AAGA,gBAAe,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAE7B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOK,MAAM,CAACE,OAAP,IAAgB,IAAhB,GAAsB,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,QAAQ,EAAC;AAAnB,OAAtB,GAA6C,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,QAAQ,EAACH,MAAM,CAACE;AAA1B,OAApD;;AAGF,SAAKN,WAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWK,QAAAA,SAAS,EAACJ,MAAM,CAACE;AAA5B,OAAP;;AAEF,SAAKL,iBAAL;AACE,aAAO,EAAC,GAAGE,KAAJ;AACKM,QAAAA,eAAe,EAACL,MAAM,CAACE,OAD5B;AAEKI,QAAAA,kBAAkB,EAACN,MAAM,CAACO;AAF/B,OAAP;;AAGF,SAAKT,kBAAL;AACE,aAAO,EAAC,GAAGC,KAAJ;AACGS,QAAAA,OAAO,EAACR,MAAM,CAACE;AADlB,OAAP;;AAEF;AACC,aAAOH,KAAP;AAhBH;AAmBD,CArBD","sourcesContent":["//TODO: create contact using all actions\n\nimport {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT\n} from \"./action.types\";\n\n//TODO: use switch case\n\n\nexport default (state,action)=>{\n\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload==null ?{...state,contacts:[]}:{...state,contacts:action.payload}\n\n      \n    case SET_LOADING:\n      return {...state, isLoading:action.payload}  \n    \n    case CONTACT_TO_UPDATE:\n      return {...state,\n                  contactToUpdate:action.payload,  \n                  contactToUpdateKey:action.Key}\n    case SET_SINGLE_CONTACT:\n      return {...state,\n                contact:action.payload}                \n    default:\n     return state; \n  }\n\n}"]},"metadata":{},"sourceType":"module"}